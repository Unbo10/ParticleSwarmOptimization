name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "${{ runner.tool_cache }}/poetry/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    # - name: Run tests
    #   run: poetry run pytest

  publish:
    needs: test-ubuntu # * Only runs after other job(s)
    runs-on: ubuntu-latest
    environment: release
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    permissions:
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ runner.tool_cache }}/poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        env:
          PROJECT_PYPI_TOKEN: ${{ secrets.PUBLISH_PYPI }}
        run: poetry publish --no-interaction --username __token__ --password $PROJECT_PYPI_TOKEN # * Consider adding in the future the --build flag. It builds the package in the same command